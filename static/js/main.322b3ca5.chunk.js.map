{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","show","handleButton","setState","prevState","event","this","props","className","location","description","onClick","Component","EventList","events","map","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","style","display","NumberOfEvents","numberOfEvents","e","placeholder","mockData","extractLocations","Set","removeQuery","window","history","pushState","pathname","newurl","protocol","host","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getEvents","NProgress","start","href","startsWith","done","getAccessToken","token","url","axios","get","data","localStorage","setItem","JSON","stringify","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","encodeCode","encodeURIComponent","access_token","App","locationEvents","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.322b3ca5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Event extends Component {\r\n\r\n    state = {\r\n        show: false\r\n    };\r\n\r\n    handleButton = () => {\r\n        this.setState((prevState) => ({ show: !prevState.show }));\r\n    }\r\n\r\n    render() {\r\n\r\n        const { event } = this.props;\r\n\r\n        return <div className=\"event\">\r\n            <h1 className=\"event-title\"></h1>\r\n            <p className=\"event-date\"></p>\r\n            <p className=\"event-location\">{event.location}</p>\r\n            {this.state.show === true && (\r\n                <p className=\"event-details\">{event.description}</p>\r\n            )}\r\n            {this.state.show === false && (\r\n                <button className=\"show-details-button\" onClick={() => this.handleButton()}>Show Details</button>\r\n            )}\r\n            {this.state.show === true && (\r\n                <button className=\"hide-details-button\" onClick={() => this.handleButton()}>\r\n                    Hide Details\r\n                </button>\r\n            )}\r\n\r\n        </div>;\r\n    }\r\n}\r\nexport default Event;","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n    render() {\r\n        const { events } = this.props;\r\n        return (\r\n            <ul className=\"EventList\">\r\n                {events.map(event =>\r\n                    <li key={event.id}>\r\n                        <Event event={event} />\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\n\r\nclass CitySearch extends Component {\r\n\r\n    state = {\r\n        query: \"\",\r\n        suggestions: [],\r\n        showSuggestions: undefined\r\n\r\n    }\r\n\r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        const suggestions = this.props.locations.filter((location) => {\r\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n        });\r\n        this.setState({\r\n            query: value,\r\n            suggestions,\r\n        });\r\n    }\r\n\r\n    handleItemClicked = (suggestion) => {\r\n        this.setState({\r\n            query: suggestion,\r\n            showSuggestions: false\r\n        });\r\n\r\n        this.props.updateEvents(suggestion);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"CitySearch\">\r\n                <input type=\"text\" className=\"city\" value={this.state.query} onChange={this.handleInputChanged} onFocus={() => { this.setState({ showSuggestions: true }) }} />\r\n                <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\r\n                    {this.state.suggestions.map((suggestion) => (\r\n                        <li key={suggestion} onClick={() => this.handleItemClicked(suggestion)}>{suggestion}</li>\r\n                    ))}\r\n                    <li onClick={() => this.handleItemClicked(\"all\")}>\r\n                        <b>See all cities</b>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CitySearch;","import React, { Component } from \"react\";\r\n\r\nclass NumberOfEvents extends Component {\r\n    state = {\r\n        numberOfEvents: 5,\r\n    };\r\n\r\n    handleInputChanged = (e) => {\r\n        const value = e.target.value;\r\n\r\n        this.setState({\r\n            numberOfEvents: value,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const numberOfEvents = this.state.numberOfEvents;\r\n        return (\r\n            <div className=\"numberOfEvents\">\r\n                <label className=\"number-label\">Choose a number of events:</label>\r\n                <br />\r\n                <input\r\n                    type='number'\r\n                    className='number-events'\r\n                    value={numberOfEvents}\r\n                    onChange={(e) => this.handleInputChanged(e)}\r\n                    placeholder=\"Number of Events\"\r\n                />\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default NumberOfEvents;","const mockData = [\r\n    {\r\n        \"kind\": \"calendar#event\",\r\n        \"etag\": \"\\\"3181161784712000\\\"\",\r\n        \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n        \"status\": \"confirmed\",\r\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n        \"created\": \"2020-05-19T19:17:46.000Z\",\r\n        \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n        \"summary\": \"Learn JavaScript\",\r\n        \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n        \"location\": \"London, UK\",\r\n        \"creator\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"organizer\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"start\": {\r\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"end\": {\r\n            \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n        \"originalStartTime\": {\r\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n        \"sequence\": 0,\r\n        \"reminders\": {\r\n            \"useDefault\": true\r\n        },\r\n        \"eventType\": \"default\"\r\n    },\r\n    {\r\n        \"kind\": \"calendar#event\",\r\n        \"etag\": \"\\\"3181159875584000\\\"\",\r\n        \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n        \"status\": \"confirmed\",\r\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n        \"created\": \"2020-05-19T19:14:30.000Z\",\r\n        \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n        \"summary\": \"React is Fun\",\r\n        \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n        \"location\": \"Berlin, Germany\",\r\n        \"creator\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"organizer\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"start\": {\r\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"end\": {\r\n            \"dateTime\": \"2020-05-20T15:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n        \"originalStartTime\": {\r\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n        \"sequence\": 0,\r\n        \"reminders\": {\r\n            \"useDefault\": true\r\n        },\r\n        \"eventType\": \"default\"\r\n    },\r\n];\r\n\r\n// mockData = JSON.parse(JSON.stringify(mockData));\r\n\r\nexport { mockData };","import { mockData } from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\n\r\nexport const extractLocations = (events) => {\r\n    var extractLocations = events.map((event) => event.location);\r\n    var locations = [...new Set(extractLocations)];\r\n    return locations;\r\n};\r\n\r\nconst removeQuery = () => {\r\n    if (window.history.pushState && window.location.pathname) {\r\n        var newurl =\r\n            window.location.protocol +\r\n            \"//\" +\r\n            window.location.host +\r\n            window.location.pathname;\r\n        window.history.pushState(\"\", \"\", newurl);\r\n    } else {\r\n        newurl = window.location.protocol + \"//\" + window.location.host;\r\n        window.history.pushState(\"\", \"\", newurl);\r\n    }\r\n};\r\n\r\nconst checkToken = async (accessToken) => {\r\n    const result = await fetch(\r\n        `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n    )\r\n        .then((res) => res.json())\r\n        .catch((error) => error.json());\r\n\r\n    return result;\r\n};\r\n\r\nexport const getEvents = async () => {\r\n    NProgress.start();\r\n\r\n    if (window.location.href.startsWith(\"http://localhost\")) {\r\n        NProgress.done();\r\n        return mockData;\r\n    }\r\n\r\n\r\n    const token = await getAccessToken();\r\n\r\n    if (token) {\r\n        removeQuery();\r\n        const url = 'https://dat3m21my8.execute-api.us-west-2.amazonaws.com/dev/api/get-events' + '/' + token;\r\n        const result = await axios.get(url);\r\n        if (result.data) {\r\n            var locations = extractLocations(result.data.events);\r\n            localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n            localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n        }\r\n        NProgress.done();\r\n        return result.data.events;\r\n    }\r\n};\r\n\r\nexport const getAccessToken = async () => {\r\n    const accessToken = localStorage.getItem('access_token');\r\n    const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n    if (!accessToken || tokenCheck.error) {\r\n        await localStorage.removeItem(\"access_token\");\r\n        const searchParams = new URLSearchParams(window.location.search);\r\n        const code = await searchParams.get(\"code\");\r\n        if (!code) {\r\n            const results = await axios.get(\r\n                \"https://dat3m21my8.execute-api.us-west-2.amazonaws.com/dev/api/get-auth-url\"\r\n            );\r\n            const { authUrl } = results.data;\r\n            return (window.location.href = authUrl);\r\n        }\r\n        return code && getToken(code);\r\n    }\r\n    return accessToken;\r\n}\r\n\r\nconst getToken = async (code) => {\r\n    const encodeCode = encodeURIComponent(code);\r\n    const { access_token } = await fetch(\r\n        'https://dat3m21my8.execute-api.us-west-2.amazonaws.com/dev/api/token' + '/' + encodeCode\r\n    )\r\n        .then((res) => {\r\n            return res.json();\r\n        })\r\n        .catch((error) => error);\r\n\r\n    access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n    return access_token;\r\n};\r\n\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from \"./NumberOfEvents\";\nimport { getEvents, extractLocations } from './api';\nimport './nprogress.css';\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n  }\n\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') ?\n        events :\n        events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({ events, locations: extractLocations(events) });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Welcome to Meet</h1>\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <NumberOfEvents />\n        <EventList events={this.state.events} />\n\n      </div>\n    );\n  }\n\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","WelcomeScreen.jsx","EventGenre.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","show","handleButton","setState","prevState","event","this","props","className","summary","location","description","onClick","Component","EventList","events","map","id","Alert","getStyle","color","fontSize","style","text","InfoAlert","ErrorAlert","WarningAlert","CitySearch","query","suggestions","showSuggestions","undefined","infoText","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","length","handleItemClicked","suggestion","updateEvents","type","placeholder","onChange","onFocus","display","NumberOfEvents","numberOfEvents","errorText","e","updateNumberOfEvents","mockData","extractLocations","Set","removeQuery","window","history","pushState","pathname","newurl","protocol","host","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getEvents","NProgress","start","href","startsWith","done","navigator","onLine","localStorage","getItem","JSON","parse","getAccessToken","token","url","axios","get","data","setItem","stringify","tokenCheck","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","encodeCode","encodeURIComponent","access_token","WelcomeScreen","showWelcomeScreen","align","class","src","alt","rel","EventGenre","useState","setData","genres","colours","useEffect","genre","split","includes","name","getData","ResponsiveContainer","height","PieChart","width","Pie","cx","cy","labelLine","outerRadius","fill","dataKey","label","percent","toFixed","entry","index","Cell","App","currentLocation","mounted","locationEvents","slice","number","city","shift","console","log","eventNumber","isTokenValid","ScatterChart","margin","top","right","bottom","left","CartesianGrid","XAxis","YAxis","allowDecimals","Tooltip","cursor","strokeDasharray","Scatter","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.21e1cbd2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Event extends Component {\r\n\r\n    state = {\r\n        show: false\r\n    };\r\n\r\n    handleButton = () => {\r\n        this.setState((prevState) => ({ show: !prevState.show }));\r\n    }\r\n\r\n    render() {\r\n\r\n        const { event } = this.props;\r\n\r\n        return (\r\n            <div className=\"event\">\r\n                <h2 className=\"event-title\">{event.summary}</h2>\r\n                <p className=\"event-date\"></p>\r\n                <p className=\"event-location\">{event.location}</p>\r\n                {this.state.show === true && (\r\n                    <p className=\"event-details\">{event.description}</p>\r\n                )}\r\n                {this.state.show === false && (\r\n                    <button className=\"show-details-button\" onClick={() => this.handleButton()}>Show Details</button>\r\n                )}\r\n                {this.state.show === true && (\r\n                    <button className=\"hide-details-button\" onClick={() => this.handleButton()}>\r\n                        Hide Details\r\n                    </button>\r\n                )}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Event;","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n    render() {\r\n        const { events } = this.props;\r\n        return (\r\n            <ul className=\"EventList\">\r\n                {events.map(event =>\r\n                    <li key={event.id}>\r\n                        <Event event={event} />\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\n\r\nclass Alert extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = null;\r\n        this.fontSize = '16px';\r\n        // this.padding = null;\r\n    }\r\n\r\n    getStyle = () => {\r\n        return {\r\n            color: this.color,\r\n            fontSize: this.fontSize,\r\n            // backgroundColor: this.backgroundColor,\r\n            // padding: this.padding,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Alert\">\r\n                <p style={this.getStyle()}>{this.props.text}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass InfoAlert extends Alert {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = 'blue';\r\n        this.fontSize = '20px';\r\n        // this.backgroundColor = '#eee';\r\n    }\r\n}\r\n\r\nclass ErrorAlert extends Alert {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = 'red';\r\n    }\r\n}\r\n\r\nclass WarningAlert extends Alert {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = 'yellow';\r\n\r\n    }\r\n}\r\n\r\n\r\nexport { InfoAlert, ErrorAlert, WarningAlert };","import React, { Component } from 'react';\r\nimport { InfoAlert } from './Alert';\r\n\r\nclass CitySearch extends Component {\r\n\r\n    state = {\r\n        query: \"\",\r\n        suggestions: [],\r\n        showSuggestions: undefined,\r\n        infoText: null,\r\n\r\n    }\r\n\r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        this.setState({ showSuggestions: true });\r\n        const suggestions = this.props.locations.filter((location) => {\r\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n        });\r\n        if (suggestions.length === 0) {\r\n            this.setState({\r\n                query: value,\r\n                infoText: 'We can not find the city you are looking for. Please try another city',\r\n            });\r\n        } else {\r\n            return this.setState({\r\n                query: value,\r\n                suggestions,\r\n                infoText: null,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleItemClicked = (suggestion) => {\r\n        this.setState({\r\n            query: suggestion,\r\n            showSuggestions: false\r\n        });\r\n\r\n        this.props.updateEvents(suggestion);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"CitySearch\">\r\n                <input type=\"text\" placeholder=\"search for a city\" className=\"city\" value={this.state.query} onChange={this.handleInputChanged} onFocus={() => { this.setState({ showSuggestions: true }) }} />\r\n\r\n                <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\r\n\r\n                    {this.state.suggestions.map((suggestion) => (\r\n                        <li key={suggestion} onClick={() => this.handleItemClicked(suggestion)}>{suggestion}</li>\r\n                    ))}\r\n\r\n                    <li onClick={() => this.handleItemClicked(\"all\")}>\r\n                        <b>See all cities</b>\r\n                    </li>\r\n                    {this.state.infoText\r\n                        ? <li><InfoAlert text={this.state.infoText} /></li>\r\n                        : <div></div>}\r\n                </ul>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CitySearch;","import React, { Component } from \"react\";\r\nimport { ErrorAlert } from './Alert';\r\n\r\nclass NumberOfEvents extends Component {\r\n    state = {\r\n        numberOfEvents: 32,\r\n        errorText: null,\r\n    };\r\n\r\n    handleInputChanged = (e) => {\r\n        const value = e.target.value;\r\n\r\n        if (value < 1 || value > 99) {\r\n            this.setState({\r\n                numberOfEvents: '',\r\n                errorText: 'You can only enter a number between 1 and 99.',\r\n            });\r\n        } else {\r\n            this.setState({\r\n                numberOfEvents: value,\r\n                errorText: null,\r\n            });\r\n            this.props.updateNumberOfEvents(value);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const numberOfEvents = this.state.numberOfEvents;\r\n        return (\r\n            <div className=\"NumberOfEvents\">\r\n                <label className=\"number-label\">Choose a number of events:</label>\r\n                <br />\r\n                <input\r\n                    type='number'\r\n                    className='number-events'\r\n                    id=\"number-of-events\"\r\n                    value={numberOfEvents}\r\n                    onChange={(e) => this.handleInputChanged(e)}\r\n                    placeholder=\"1\"\r\n                />\r\n                {this.state.errorText\r\n                    ? <ErrorAlert text={this.state.errorText} />\r\n                    : <div></div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NumberOfEvents;","const mockData = [\r\n    {\r\n        \"kind\": \"calendar#event\",\r\n        \"etag\": \"\\\"3181161784712000\\\"\",\r\n        \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n        \"status\": \"confirmed\",\r\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n        \"created\": \"2020-05-19T19:17:46.000Z\",\r\n        \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n        \"summary\": \"Learn JavaScript\",\r\n        \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n        \"location\": \"London, UK\",\r\n        \"creator\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"organizer\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"start\": {\r\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"end\": {\r\n            \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n        \"originalStartTime\": {\r\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n        \"sequence\": 0,\r\n        \"reminders\": {\r\n            \"useDefault\": true\r\n        },\r\n        \"eventType\": \"default\"\r\n    },\r\n    {\r\n        \"kind\": \"calendar#event\",\r\n        \"etag\": \"\\\"3181159875584000\\\"\",\r\n        \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n        \"status\": \"confirmed\",\r\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n        \"created\": \"2020-05-19T19:14:30.000Z\",\r\n        \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n        \"summary\": \"React is Fun\",\r\n        \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n        \"location\": \"Berlin, Germany\",\r\n        \"creator\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"organizer\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"start\": {\r\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"end\": {\r\n            \"dateTime\": \"2020-05-20T15:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n        \"originalStartTime\": {\r\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n        \"sequence\": 0,\r\n        \"reminders\": {\r\n            \"useDefault\": true\r\n        },\r\n        \"eventType\": \"default\"\r\n    }\r\n];\r\n\r\n// mockData = JSON.parse(JSON.stringify(mockData));\r\n\r\nexport { mockData };","import { mockData } from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\n\r\nexport const extractLocations = (events) => {\r\n    var extractLocations = events.map((event) => event.location);\r\n    var locations = [...new Set(extractLocations)];\r\n    return locations;\r\n};\r\n\r\nconst removeQuery = () => {\r\n    if (window.history.pushState && window.location.pathname) {\r\n        var newurl =\r\n            window.location.protocol +\r\n            \"//\" +\r\n            window.location.host +\r\n            window.location.pathname;\r\n        window.history.pushState(\"\", \"\", newurl);\r\n    } else {\r\n        newurl = window.location.protocol + \"//\" + window.location.host;\r\n        window.history.pushState(\"\", \"\", newurl);\r\n    }\r\n};\r\n\r\nexport const checkToken = async (accessToken) => {\r\n    const result = await fetch(\r\n        `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n    )\r\n        .then((res) => res.json())\r\n        .catch((error) => error);\r\n\r\n    return result;\r\n};\r\n\r\nexport const getEvents = async () => {\r\n    NProgress.start();\r\n\r\n    if (window.location.href.startsWith(\"http://localhost\")) {\r\n        NProgress.done();\r\n        return mockData;\r\n    }\r\n\r\n    if (!navigator.onLine) {\r\n        const events = await localStorage.getItem(\"lastEvents\");\r\n        NProgress.done();\r\n        return events ? JSON.parse(events).events : [];;\r\n    }\r\n\r\n    const token = await getAccessToken();\r\n\r\n\r\n    if (token) {\r\n        removeQuery();\r\n        const url = 'https://dat3m21my8.execute-api.us-west-2.amazonaws.com/dev/api/get-events/' + token;\r\n        const result = await axios.get(url);\r\n        if (result.data) {\r\n            var locations = extractLocations(result.data.events);\r\n            localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n            localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n        }\r\n        NProgress.done();\r\n        return result.data.events;\r\n    }\r\n};\r\n\r\nexport const getAccessToken = async () => {\r\n    const accessToken = localStorage.getItem('access_token');\r\n    const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n    if (!accessToken || tokenCheck.error) {\r\n        await localStorage.removeItem(\"access_token\");\r\n        const searchParams = new URLSearchParams(window.location.search);\r\n        const code = await searchParams.get(\"code\");\r\n        if (!code) {\r\n            const results = await axios.get(\r\n                \"https://dat3m21my8.execute-api.us-west-2.amazonaws.com/dev/api/get-auth-url\"\r\n            );\r\n            const { authUrl } = results.data;\r\n            return (window.location.href = authUrl);\r\n        }\r\n        return code && getToken(code);\r\n    }\r\n    return accessToken;\r\n}\r\n\r\nconst getToken = async (code) => {\r\n    const encodeCode = encodeURIComponent(code);\r\n    const { access_token } = await fetch(\r\n        'https://dat3m21my8.execute-api.us-west-2.amazonaws.com/dev/api/token/' + encodeCode\r\n    )\r\n        .then((res) => {\r\n            return res.json();\r\n        })\r\n        .catch((error) => error);\r\n\r\n    access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n    return access_token;\r\n};\r\n\r\n","import React from \"react\";\r\nimport './WelcomeScreen.css';\r\nfunction WelcomeScreen(props) {\r\n    return props.showWelcomeScreen ?\r\n        (\r\n            <div className=\"WelcomeScreen\">\r\n                <h1>Welcome to the Meet app</h1>\r\n                <h4>\r\n                    Log in to see upcoming events around the world for\r\n                    full-stack\r\n                    developers\r\n                </h4>\r\n                <div className=\"button_cont\" align=\"center\">\r\n                    <div class=\"google-btn\">\r\n                        <div class=\"google-icon-wrapper\">\r\n                            <img\r\n                                class=\"google-icon\"\r\n                                src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\r\n                                alt=\"Google sign-in\"\r\n                            />\r\n                        </div>\r\n                        <button onClick={() => { props.getAccessToken() }}\r\n                            rel=\"nofollow noopener\"\r\n                            class=\"btn-text\"\r\n                        >\r\n                            <b>Sign in with google</b>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <a\r\n                    href=\"https://alex-offner.github.io/meet/privacy.html\"\r\n                    rel=\"nofollow noopener\"\r\n                >\r\n                    Privacy policy\r\n                </a>\r\n            </div>\r\n        )\r\n        : null\r\n}\r\nexport default WelcomeScreen;\r\n","import { PieChart, Pie, Cell, ResponsiveContainer } from 'recharts';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst EventGenre = ({ events }) => {\r\n    const [data, setData] = useState([]);\r\n\r\n    const genres = ['React', 'JavaScript', 'Node', 'jQuery', 'Angular JS'];\r\n    const colours = ['#52D726', '#FFEC00', '#FF7300', '#FF0000', '#007ED6'];\r\n\r\n    const getData = () => {\r\n        let data = genres.map((genre) => {\r\n            const value = events.filter((event) => event.summary.split(' ').includes(genre)).length;\r\n\r\n            return { name: genre, value };\r\n        });\r\n        data = data.filter(data => data.value)\r\n        return data;\r\n    };\r\n\r\n\r\n    useEffect(() => { setData(() => getData()) }, [events]);\r\n\r\n    return (\r\n        <ResponsiveContainer height={400} >\r\n            <PieChart width={400} height={400}>\r\n                <Pie\r\n                    data={data}\r\n                    cx={200}\r\n                    cy={200}\r\n                    labelLine={false}\r\n                    outerRadius={80}\r\n                    fill=\"#8884d8\"\r\n                    dataKey=\"value\"\r\n                    label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\r\n                >\r\n                    {data.map((entry, index) => (\r\n                        <Cell key={`cell-${index}`} fill={colours[index % colours.length]} name={entry.name} />\r\n                    ))}\r\n                </Pie>\r\n            </PieChart>\r\n        </ResponsiveContainer>\r\n    )\r\n\r\n};\r\n\r\n\r\nexport default EventGenre;","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from \"./NumberOfEvents\";\nimport { getEvents, extractLocations, checkToken, getAccessToken } from './api';\nimport './nprogress.css';\nimport { WarningAlert } from './Alert';\nimport WelcomeScreen from './WelcomeScreen';\nimport {\n  ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer\n} from 'recharts';\nimport EventGenre from './EventGenre';\n\nclass App extends Component {\n  state = {\n    numberOfEvents: 32,\n    events: [],\n    locations: [],\n    currentLocation: 'all',\n    showWelcomeScreen: undefined\n\n  }\n\n  updateEvents = (location, numberOfEvents) => {\n    if (this.mounted) {\n      getEvents().then((events) => {\n        const locationEvents = (location === 'all') ?\n          events.slice(0, numberOfEvents)\n          :\n          events.filter((event) => event.location === location);\n        this.setState({\n          events: locationEvents.slice(0, numberOfEvents),\n          currentLocation: location,\n          numberOfEvents: numberOfEvents\n        });\n      });\n    }\n  }\n\n  updateNumberOfEvents(eventNumber) {\n    this.setState({ numberOfEvents: eventNumber });\n    const { currentLocation } = this.state;\n    this.updateEvents(currentLocation, eventNumber);\n  }\n\n  //This is the old componentDidMount function, that was used before getting the app ready for verification. If you comment out the new one and the WelcomeSceen component,\n  //and activate this one the app runs again online and offline\n\n  // componentDidMount() {\n  //   const { numberOfEvents } = this.state;\n  //   this.mounted = true;\n  //   getEvents().then((events) => {\n  //     if (this.mounted) {\n  //       this.setState({\n  //         events: events.slice(0, numberOfEvents),\n  //         locations: extractLocations(events)\n  //       });\n  //     }\n  //   });\n  // }\n\n  //This is the new async componentDidMount function. If this is active and the WelcomeScreen render is active the app doesn't load offline and loads an error in console log.\n  //This is the state it is deployed right now.\n\n  async componentDidMount() {\n    this.mounted = true;\n    const { numberOfEvents } = this.state;\n    const accessToken = localStorage.getItem('access_token');\n    const isTokenValid = (await checkToken(accessToken)).error ? false : true;\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get(\"code\");\n    this.setState({ showWelcomeScreen: !(code || isTokenValid) });\n    if ((code || isTokenValid) && this.mounted) {\n      getEvents().then((events) => {\n        if (this.mounted) {\n          this.setState({ events: events.slice(0, numberOfEvents), locations: extractLocations(events) });\n        }\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getData = () => {\n    const { locations, events } = this.state;\n    const data = locations.map((location) => {\n      const number = events.filter((event) => event.location === location).length\n      const city = location.split(', ').shift()\n      console.log(city, number);\n      return { city, number };\n\n    })\n    return data;\n  };\n\n\n  render() {\n    if (this.state.showWelcomeScreen)\n      return (\n        <WelcomeScreen\n          showWelcomeScreen={this.state.showWelcomeScreen}\n          getAccessToken={() => {\n            getAccessToken();\n          }}\n        />\n      );\n    return (\n      <div className=\"App\">\n        <div className=\"header\">\n          <h1>Welcome to Meet</h1>\n        </div>\n        {!navigator.onLine ? (<WarningAlert text='You are currently offline! Some features might not be availabele!' />) : (<div></div>)}\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <NumberOfEvents updateNumberOfEvents={(e) => this.updateNumberOfEvents(e)} />\n        <h4>Events in each city</h4>\n        <div className=\"data-vis-wrapper\">\n          <EventGenre events={this.state.events} />\n          <ResponsiveContainer height={400}>\n            <ScatterChart margin={{ top: 20, right: 20, bottom: 20, left: 20, }}>\n              <CartesianGrid />\n              <XAxis type=\"category\" dataKey=\"city\" name=\"city\" />\n              <YAxis type=\"number\" dataKey=\"number\" name=\"number of events\" allowDecimals={false} />\n              <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n              <Scatter data={this.getData()} fill=\"#006c9a\" />\n            </ScatterChart>\n          </ResponsiveContainer>\n        </div>\n\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport * as atatus from 'atatus-spa';\n\natatus.config('740b223f23304add96c2f8d15a79c048').install();\n// atatus.notify(new Error('Test Atatus Setup'));\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}